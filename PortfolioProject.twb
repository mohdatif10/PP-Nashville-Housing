<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='FS1' inline='true' name='federated.0nqa75a0jvzy3h1c50oda0iik0lx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.03wxdvp03g621y11mf6w01ll1l87'>
            <connection class='mysql' dbname='portfolioproject' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87' name='q1' table='[q1]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87' name='q1' table='[q1]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_Cases</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_Cases]</local-name>
            <parent-name>[q1]</parent-name>
            <remote-alias>total_Cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>41</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q1_9C92B6A3AF0540C8AA4D6828D7658FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>131</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[q1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>32</precision>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q1_9C92B6A3AF0540C8AA4D6828D7658FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_rate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[death_rate]</local-name>
            <parent-name>[q1]</parent-name>
            <remote-alias>death_rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>39</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q1_9C92B6A3AF0540C8AA4D6828D7658FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='q1' datatype='table' name='[__tableau_internal_object_id__].[q1_9C92B6A3AF0540C8AA4D6828D7658FCF]' role='measure' type='quantitative' />
      <column caption='Death Rate' datatype='real' name='[death_rate]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_Cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='q1' id='q1_9C92B6A3AF0540C8AA4D6828D7658FCF'>
            <properties context=''>
              <relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87' name='q1' table='[q1]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='FS2' inline='true' name='federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy)'>
            <connection class='mysql' dbname='portfolioproject' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy)' name='q2' table='[q2]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy)' name='q2' table='[q2]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[q2]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q2_BA6D6E388C6948F2A8A1B41905AA12B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_death_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_death_count]</local-name>
            <parent-name>[q2]</parent-name>
            <remote-alias>highest_death_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q2_BA6D6E388C6948F2A8A1B41905AA12B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='q2' datatype='table' name='[__tableau_internal_object_id__].[q2_BA6D6E388C6948F2A8A1B41905AA12B1]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Death Count' datatype='integer' name='[highest_death_count]' role='measure' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='q2' id='q2_BA6D6E388C6948F2A8A1B41905AA12B1'>
            <properties context=''>
              <relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy)' name='q2' table='[q2]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='FS3' inline='true' name='federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy 2)'>
            <connection class='mysql' dbname='portfolioproject' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy 2)' name='q3' table='[q3]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy 2)' name='q3' table='[q3]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[q3]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q3_C2BE37807A6E40C6BE356C951FA320DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[q3]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q3_C2BE37807A6E40C6BE356C951FA320DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[q3]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q3_C2BE37807A6E40C6BE356C951FA320DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infection_rate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[infection_rate]</local-name>
            <parent-name>[q3]</parent-name>
            <remote-alias>infection_rate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>26</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q3_C2BE37807A6E40C6BE356C951FA320DB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='q3' datatype='table' name='[__tableau_internal_object_id__].[q3_C2BE37807A6E40C6BE356C951FA320DB]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Infection Rate' datatype='real' name='[infection_rate]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='q3' id='q3_C2BE37807A6E40C6BE356C951FA320DB'>
            <properties context=''>
              <relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy 2)' name='q3' table='[q3]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='FS4' inline='true' name='federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy 3)'>
            <connection class='mysql' dbname='portfolioproject' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy 3)' name='q4' table='[q4]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy 3)' name='q4' table='[q4]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[q4]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>100</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q4_0C06BBAE51AD4B9C8F2CFCD7C1D16027]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[q4]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q4_0C06BBAE51AD4B9C8F2CFCD7C1D16027]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>covid_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[covid_date]</local-name>
            <parent-name>[q4]</parent-name>
            <remote-alias>covid_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q4_0C06BBAE51AD4B9C8F2CFCD7C1D16027]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[q4]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q4_0C06BBAE51AD4B9C8F2CFCD7C1D16027]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infection_rate</remote-name>
            <remote-type>131</remote-type>
            <local-name>[infection_rate]</local-name>
            <parent-name>[q4]</parent-name>
            <remote-alias>infection_rate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>26</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DECIMAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[q4_0C06BBAE51AD4B9C8F2CFCD7C1D16027]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='q4' datatype='table' name='[__tableau_internal_object_id__].[q4_0C06BBAE51AD4B9C8F2CFCD7C1D16027]' role='measure' type='quantitative' />
      <column caption='Covid Date' datatype='date' name='[covid_date]' role='dimension' type='ordinal' />
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Infection Rate' datatype='real' name='[infection_rate]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Saudi Arabia&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76b7b2'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9c755f'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;Actual&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edc948'>
              <multibucket>
                <bucket>&quot;Saudi Arabia&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9da7'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;Estimate&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='q4' id='q4_0C06BBAE51AD4B9C8F2CFCD7C1D16027'>
            <properties context=''>
              <relation connection='mysql.03wxdvp03g621y11mf6w01ll1l87 (copy 3)' name='q4' table='[q4]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_3FBE5B55F1714691B9DD8F2C00A10A2B]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Q2' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Continent' />
        <param name='target' value='Q2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Q1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='14'>Global numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FS1' name='federated.0nqa75a0jvzy3h1c50oda0iik0lx' />
          </datasources>
          <datasource-dependencies datasource='federated.0nqa75a0jvzy3h1c50oda0iik0lx'>
            <column caption='Death Rate' datatype='real' name='[death_rate]' role='measure' type='quantitative' />
            <column-instance column='[death_rate]' derivation='Sum' name='[sum:death_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_Cases]' derivation='Sum' name='[sum:total_Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_Cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[sum:death_rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[sum:total_Cases:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[sum:total_Cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[sum:death_rate:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='79' />
            <format attr='width' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[:Measure Names]' value='145' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[sum:death_rate:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[sum:total_Cases:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[sum:total_deaths:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#aa5500' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='10' />
            <format attr='color' scope='cols' value='#ffffff' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5492265224456787' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{591DC35D-A834-4C25-A4DF-70FA20250318}' />
    </worksheet>
    <worksheet name='Q2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>North and South Americas contribute to more than 50% of world&apos;s Covid-19 deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FS2' name='federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy)' />
          </datasources>
          <datasource-dependencies datasource='federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy)'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Death Count' datatype='integer' name='[highest_death_count]' role='measure' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[highest_death_count]' derivation='Sum' name='[sum:highest_death_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy)].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy)].[none:continent:nk]' value='142' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy)].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='size' value='1.2743645906448364' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy)].[sum:highest_death_count:qk]</rows>
        <cols>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy)].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{BBD28A10-895A-4EF4-B02D-C40871869AA8}' />
    </worksheet>
    <worksheet name='Q3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Infection rates are significant in Western Europe</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FS3' name='federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)'>
            <column caption='Infection Rate' datatype='real' name='[infection_rate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[infection_rate]' derivation='Sum' name='[sum:infection_rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[Longitude (generated)]' field-type='quantitative' max='10320051.885820251' min='-11801235.488116814' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[Latitude (generated)]' field-type='quantitative' max='9954788.009679798' min='-10699729.350118643' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='60' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[sum:infection_rate:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[sum:infection_rate:qk]' value='Infection Rate'>
              <formatted-text>
                <run>Infection Rate</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[none:location:nk]' />
              <color column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[sum:infection_rate:qk]' />
              <geometry column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='690' />
                <format attr='maxheight' value='690' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[Latitude (generated)]</rows>
        <cols>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6B125335-46E2-4DDF-BE2D-96A546BB2B5A}' />
    </worksheet>
    <worksheet name='Q4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Forecast predicts alarming infection rates for UK and USA over next four quarters</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='FS4' name='federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)' />
          </datasources>
          <datasource-dependencies datasource='federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)'>
            <column-instance column='[infection_rate]' derivation='Avg' name='[avg:infection_rate:qk]' pivot='key' type='quantitative' />
            <column caption='Covid Date' datatype='date' name='[covid_date]' role='dimension' type='ordinal' />
            <column-instance column='[infection_rate]' derivation='Avg' forecast-column-base='[avg:infection_rate:qk]' forecast-column-type='forecast-value' name='[fVal:avg:infection_rate:qk]' pivot='key' type='quantitative' />
            <column caption='Infection Rate' datatype='real' name='[infection_rate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[covid_date]' derivation='Quarter-Trunc' name='[tqr:covid_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[tqr:covid_date:qk]' scope='cols' value='Quarters Date' />
            <format attr='width' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[fVal:avg:infection_rate:qk]' value='60' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[tqr:covid_date:qk]' value='95' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:location:nk]' />
              <text column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:location:nk]' />
              <color column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:Forecast Indicator:nk]' />
              <text column='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[fVal:avg:infection_rate:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[fVal:avg:infection_rate:qk]</rows>
        <cols>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[tqr:covid_date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{042FFF1A-BB32-409F-B47D-ACA9AEA4FC5F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='9' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='7' type-v2='layout-basic' w='92758' x='483' y='940'>
              <zone h='23972' id='3' name='Q1' w='46371' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36310' id='5' name='Q2' w='46371' x='483' y='24912'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60282' id='6' name='Q3' w='46387' x='46854' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37838' id='11' name='Q4' w='79505' x='483' y='61222'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37838' id='12' name='Q4' pane-specification-id='0' param='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:location:nk]&#10;[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:Forecast Indicator:nk]' type-v2='color' w='13253' x='79988' y='61222'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='104' h='98120' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='6276' x='93241' y='940'>
              <zone h='8578' id='10' name='Q3' pane-specification-id='1' param='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[sum:infection_rate:qk]' type-v2='color' w='6276' x='93241' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='19' param='vert' type-v2='layout-flow' w='99034' x='483' y='940'>
                <zone fixed-size='183' h='23972' id='3' is-fixed='true' name='Q1' w='46371' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60282' id='6' is-fixed='true' name='Q3' w='46387' x='46854' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8578' id='10' name='Q3' pane-specification-id='1' param='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[sum:infection_rate:qk]' type-v2='color' w='6276' x='93241' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36310' id='5' is-fixed='true' name='Q2' w='46371' x='483' y='24912'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37838' id='11' is-fixed='true' name='Q4' w='79505' x='483' y='61222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='37838' id='12' name='Q4' pane-specification-id='0' param='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:location:nk]&#10;[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:Forecast Indicator:nk]' type-v2='color' w='13253' x='79988' y='61222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{946154A0-A3FD-4646-ABB0-1C8D6E79AC95}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Q1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nqa75a0jvzy3h1c50oda0iik0lx].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00E2651E-3ED3-4703-9410-72C528D666F8}' />
    </window>
    <window class='worksheet' name='Q2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy)].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy)].[none:continent:nk]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{B344FAA4-188E-4C9F-9DCA-15119FAD6D06}' />
    </window>
    <window class='worksheet' name='Q3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[sum:infection_rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[none:location:nk]</field>
            <field>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 2)].[sum:infection_rate:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E4FEDFC1-A356-4972-96D8-767817B13599}' />
    </window>
    <window class='worksheet' name='Q4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:location:nk]&#10;[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:Forecast Indicator:nk]</field>
            <field>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:location:nk]</field>
            <field>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[yr:covid_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F82BE7C7-4382-438E-A347-80BC9E305FC0}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid Dashboard'>
      <viewpoints>
        <viewpoint name='Q1' />
        <viewpoint name='Q2'>
          <zoom type='entire-view' />
          <highlight field='[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy)].[none:continent:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Q3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Q4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:Forecast Indicator:nk]</field>
              <field>[federated.0nqa75a0jvzy3h1c50oda0iik0lx (copy 3)].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{B4172058-7262-40AD-B106-09AFDB23DAA1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid Dashboard' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='103' name='Q1' width='192'>
      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
      B8ymGTaUOVFHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Q2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Q4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
